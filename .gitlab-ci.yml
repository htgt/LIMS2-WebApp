variables:
  GIT_SUBMODULE_STRATEGY: normal
  LIMS2_WEBAPP_FILESYSTEM_VERSION: 7ea046b9f6105c8166adb9fdf35326d9d323f25f

stages:
  - build-test
  - test
  - build-prod
  - deploy-prod

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-test:
  stage: build-test
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/sci/lims2-webapp-filesystem.git
    - git -C "./lims2-webapp-filesystem" checkout ${LIMS2_WEBAPP_FILESYSTEM_VERSION}
    - docker build
      --file dockerfiles/low-level
      --tag sci/lims2:bionic
      .
    - docker build
      --file dockerfiles/high-level
      --build-arg solr_url=$SOLR_URL
      --tag sci/lims2:fs
      --no-cache
      .
    - docker build
      --file dockerfiles/test
      --tag $CI_REGISTRY/sci/lims2-webapp/lims2:$CI_COMMIT_SHORT_SHA
      .
    - docker push $CI_REGISTRY/sci/lims2-webapp/lims2:$CI_COMMIT_SHORT_SHA

test:
  stage: test
  script:
    - docker run
      --rm
      --mount "type=bind,source=/home/ubuntu/lims2-webapp-shared,target=/shared"
      $CI_REGISTRY/sci/lims2-webapp/lims2:$CI_COMMIT_SHORT_SHA

build-prod:
  stage: build-prod
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/sci/lims2-webapp-filesystem.git
    - git -C "./lims2-webapp-filesystem" checkout ${LIMS2_WEBAPP_FILESYSTEM_VERSION}
    - docker build
      --file dockerfiles/low-level
      --tag sci/lims2:bionic
      .
    - docker build
      --file dockerfiles/high-level
      --build-arg database=LIMS2_LIVE
      --build-arg solr_url=$SOLR_URL
      --tag sci/lims2:fs
      --no-cache
      .
    - docker build
      --file dockerfiles/web_app
      --tag $CI_REGISTRY/sci/lims2-webapp/lims2-prod-do-not-use-this-anywhere-else:$CI_COMMIT_SHORT_SHA
      .
    - docker push $CI_REGISTRY/sci/lims2-webapp/lims2-prod-do-not-use-this-anywhere-else:$CI_COMMIT_SHORT_SHA

deploy-prod:
  tags:
    - autoscale
  stage: deploy-prod
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$LIMS2_PROD_PUBLIC_KEY" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh ubuntu@$LIMS2_PROD_HOST "
        set -e;
        sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
        sudo docker pull $CI_REGISTRY/sci/lims2-webapp/lims2-prod-do-not-use-this-anywhere-else:$CI_COMMIT_SHORT_SHA;
        sudo docker container stop lims2_live || echo \"No container to stop\";
        sudo docker container rm lims2_live || echo \"No container to remove\";
        sudo docker run
          -d
          --restart unless-stopped
          --mount
          \"type=bind,source=/home/ubuntu/lims2-webapp-shared,target=/shared\"
          --name lims2_live
          -p 8001:8001
          -p 8002:8002
          $CI_REGISTRY/sci/lims2-webapp/lims2-prod-do-not-use-this-anywhere-else:$CI_COMMIT_SHORT_SHA
        ;
        sudo docker image prune --all --force;
      "
  after_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh ubuntu@$LIMS2_PROD_HOST "sudo docker logout"
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
