<style>
.freezerPlate {
    margin-left: 12px;
}

body {
    padding-bottom: 70px;
}

</style>

<script src="[% c.uri_for( '/static/jquery/js/d3.min.js' ) %]"></script>
[% INCLUDE 'plate_grid_view.tt' rows = 8 columns = 12 letters_on = "row" row_pixel = 50 column_pixel = 50 %]

<div class="page-header">
  <h1>Create MiSEQ Plate</h1>
</div>
<div class="container">
    <div id="plateDetails">
        <h3>Plate Details</h3>
        <table class="table table-striped">
            <tr>
                <td>
                    <label>Name:</label>
                </td>
                <td>
                    <div class="col-md-4">
                        <input type="text" class="form-control" id="plateName" oninput="updatePlateName()">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <label>384 wells?</label>
                </td>
                <td>
                    <input type="checkbox" value="">
                </td>
            </tr>
        </table>
    </div>
    <h3>Parent Plates</h3>
    <div class="row">
        <div class="col-md-2">
            <label>Freezer Plate Name:</label>
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" id="fpPlate">
        </div>
        <div class="col-md-1">
            <button class="btn btn-warning" id="addPlate"><i class="glyphicon glyphicon-plus"></i> Add</button>
        </div>
    </div>
    <br>
</div>

<div id="miseq">
    <table id="parentCollection" class="table table-striped" hidden>
        <tr>
            <th>
                Name
            </th>
            <th>
                Details
            </th>
            <th>
                Clear
            </th>
        </tr>
    </table>
    <br>
<div>

<div id="plateVisual">
    <div id="plateRow" class="col-md-12">
        <select id="freezeName" class="btn btn-default col-md-offset-2" hidden>
            <option value="-">Freezer Plate</option>
        </select>

        <div id="firstSplit" class="col-md-12"></div>
        <div class="row">
            <p id="miseqName" class="lb-md col-md-offset-1">MiSEQ Plate Name</p>
        </div>
        <div id="secondSplit" class="col-md-12"></div>
    </div>
    <div class="row">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#confirmationModal" onclick="populateModal();">
            Submit
        </button>
    </div>
</div>

<div id="confirmationModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="modalMiseqName">MiSEQ Plate: </h4>
            </div>
            <div class="modal-body" id="modalBody">
                <div class="panel-group" id="accordion"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

var parentPlates = [];
var startWell = "";
var miseqData = {};

var freezeGrid = d3.select("#firstSplit")
    .append("svg")
    .attr("width","610px")
    .attr("height","410px");

var miseqGrid = d3.select("#secondSplit")
    .append("svg")
    .attr("width","610px")
    .attr("height","410px");


$(document).ready(function() {
    setupPlate(miseqGrid, "miWell");
    setupPlate(freezeGrid, "fpWell");
    addWellNames();
    if ($('#freezeName').val() == '-') {
        d3.selectAll('.fpWell').style('fill','#93979e');
    }
    return;
});


$(function () {
    var isMouseDown = false;
    var startIndex;

    $("#secondSplit")
        .mousedown(function(evt) {
            startIndex = highlighter(evt.target);
            isMouseDown = true;
            console.log("Down.");
        })
        .mouseover(function(evt) {
            if (isMouseDown == true){
                highlighter(evt.target, startIndex);
            }
        });

    $('body').mouseup(function(evt) {
        if (isMouseDown == true) {
            console.log("Up.");
            isMouseDown = false;
            $('.selecting').toggleClass('selecting selected');
            d3.selectAll('.selected').style('fill','#03c03c');
            var key = $('#freezeName').val();
            if (key != '-') {
                miseqData[key] = {};
                $('.miWell.selected').map(function() { return trackWells(key,this); });
                $('.fpWell.selected').map(function() { return checkTile(this); } )
            }
        }
    });
});

$('#freezeName').change(function() {
    changePlateSelection();
});

function changePlateSelection() {
    var name = $('#freezeName').val(); 
    d3.selectAll('.selected').classed('selected',false);
    if (name == '-') {
        d3.selectAll('.fpWell').style('fill','#93979e');
    } else {
        d3.selectAll('.fpWell').style("fill","white");
    }
    d3.selectAll('.miWell').style("fill","white");
    $('.miWell').map(function() { resetMiseqText(this); });
    if (name in miseqData) {
        showPlateHistory(name);
    }
}

function showPlateHistory(fpName) {
    var gene = miseqData[fpName];
    var miWells = Object.keys(gene);
    for (var mi = 0; mi < miWells.length; mi++) {
        var miCont = $('g#' + miWells[mi])[1];
        var miRect = $(miCont).children('rect')[0];
        var fpCont = $('g#' + gene[miWells[mi]])[0];
        var fpRect = $(fpCont).children('rect')[0];

        d3.select(miRect).style('fill','#03c03c');
        d3.select(fpRect).style('fill','#03c03c');
        d3.select(miRect).classed('selected',true); 
        d3.select(fpRect).classed('selected',true);

        tracking(miRect.id.split('_')[1], fpRect.id.split('_')[1]);
    }
}

function highlighter(target, start) {
    if (target.nodeName != 'rect') {
        target = $(target).siblings('rect')[0];
    }

    var index;
    try {
        index = target.id;
    } catch(err) {
        return;
    }

    var originIndex = startWell.id.split('_')[1];
    index = index.split('_')[1];
    
    start = start || index;

    d3.selectAll('rect').classed('selecting',false);
    for (var inc = start; inc <= index; inc++) {
        var originID = (inc - start) + +originIndex;

        d3.select('#miWell_' + inc).classed('selecting',true);
        d3.select('#fpWell_' + originID).classed('selecting',true);

        d3.select('#miWell_' + inc).classed('selected',false);
        d3.select('#fpWell_' + originID).classed('selected',false);

        tracking(inc, originID);
    }
    d3.selectAll('rect').filter(function() { return !$(this).hasClass("selecting") && !$(this).hasClass("selected"); }).style('fill','white');
    d3.selectAll('.selecting').style('fill','#FDFD96');

    d3.select(target).style('fill','#FDFD96');
    var empties = $('.miWell').not('.selected').not('.selecting');
    var textEmpties = empties.siblings('text');
    textEmpties.text(function() { return $(this).parent()[0].id; });

    return index;
}

function tracking(miWellID, fpWellID) {
    var originWell = document.getElementById('fpWell_' + fpWellID);
    var newWell = $('#miWell_' + miWellID);
    var originID = originWell.parentNode.id;
    var textNode = newWell.siblings('text')[0];

    newWell.val(originID);

    var d3TextObj = d3.select(textNode);
    d3TextObj.text(originID);

    var arrow = d3TextObj.append('tspan')
        .attr('dx', '-1.1em')
        .attr('dy', '0.9em');
    arrow.html('&#8595');

    var destination = d3TextObj.append('tspan')
        .attr('dx', '-1.20em')
        .attr('dy', '1em');
    destination.text(newWell.parents()[0].id);
}

function trackWells(key, well) {
    var freezer = miseqData[key];
    freezer[$(well).parent()[0].id] = well.value;
    miseqData[key] = freezer;
}


$("#fpPlate").autocomplete({
    source: function(request, response) {
        $.getJSON("[% c.uri_for( '/api/autocomplete/plate_names/' ) %]",
        {
            term : $('#fpPlate').val(),
            type : 'FP'
        }, response);
    },
    minLength: 2,
});

$('#addPlate').click(function() {
    $('#parentCollection').show();
    var name = $('#fpPlate').val().trim();
    if (parentPlates.indexOf(name) == -1) {
        addTableRow(name);
        addOption(name);
    }

    return;
});

$('#plateVisual').on('click','rect.fpWell' , function() {
    if (startWell != '' && !$(startWell).hasClass('selected')) {
        d3.select(startWell).style('fill','white');
    }
    if ($('#freezeName').val() != '-') {
        startWell = this;
        d3.select(startWell).style('fill','#fdfd96');
    }
});



function resetMiseqText(well) {
    var wellID = well.parentNode.id;
    var textNode = $(well).siblings('text')[0];
    $(textNode).text(wellID);
    return;
}

function updatePlateName() { 
    $('#miseqName').text($('#plateName').val());
}

function addTableRow(name) {
    parentPlates.push(name);

    var table = document.getElementById('parentCollection');
    var row = table.insertRow(-1);

    var nameCell = row.insertCell(0);
    var detailCell = row.insertCell(1);
    var clearCell = row.insertCell(2);

    nameCell.innerText = name;
    detailCell.innerText = "Place-holder";
    clearCell.innerHTML = '<button class="btn btn-danger"><i class="glyphicon glyphicon-remove"></i> Clear</button>'

    return;
}

function addOption(name) {
    var select = document.getElementById('freezeName');
    var option = document.createElement('option');
    option.text = option.value = name;
    select.add(option,-1);
    if ($('#freezeName').val() == '-') {
        select.options[option.index].selected = true;
        changePlateSelection();
    }
}

function populateModal(){
    $('#modalMiseqName').text('MiSEQ Plate: ' + $('#plateName').val());
    $('#accordion').html("");
    var freezerPlates = Object.keys(miseqData);

    var panelOpening = '<div class="panel panel-default">';
    var panelClosing = '</div>';
    
    var header = '<div class="panel-heading"><h4 class="panel-title"><a data-toggle="collapse" data-parent="#accordion" href="#collapse';
    var headerClosing = '</a></h4></div>';
    
    var bodyOpen = '<div id="collapse';
    var bodyClass = '" class="panel-collapse collapse"><div class="panel-body"><p>';
    var bodyClosing = '</p></div></div>';

    
    for (var key = 0; key < freezerPlates.length; key++) {
        var fpName = freezerPlates[key];
        var fpDetails = miseqData[fpName];

        var wellParagraph = "";
        var wellKeys = Object.keys(fpDetails);
        var plateStructure = {};
        
        for (var well = 0; well < wellKeys.length; well++) {
            var miseqWellName = wellKeys[well];
            var fpWellName = fpDetails[miseqWellName];
            var row = miseqWellName.charAt(0);
            if (!(row in plateStructure)) {
                plateStructure[row] = [];
                plateStructure[row].push(fpWellName + " &rarr; " + miseqWellName);
            } else {
                plateStructure[row].push('</br>' + fpWellName + " &rarr; " + miseqWellName);
            }
        }
        test = plateStructure;
        var rows = Object.keys(plateStructure);
        for (var row = 0; row < rows.length; row++) {
            wellParagraph += plateStructure[rows[row]].toString() + '</br>';
        }
        var panelHeader = header + fpName + '">' + fpName + headerClosing;
        var panelBody = bodyOpen + fpName + bodyClass + wellParagraph + bodyClosing;
        var panel = panelOpening + panelHeader + panelBody + panelClosing;
        $("#accordion").append(panel);
    }
}

function checkTile(well) {
    var wellName = well.parentNode.id;
    if (Object.values(miseqData[$('#freezeName').val()]).indexOf(wellName) == -1) {
        d3.select(well).style('fill','white');
    }
}

</script>
