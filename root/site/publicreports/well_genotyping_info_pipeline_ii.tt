<script src="[% c.uri_for( '/static/jquery/js/d3.min.js' ) %]"></script>

<h2>QC results</h2>
[% FOREACH exp IN data.experiments %]
    <h3>[% exp.qc_origin_plate %]_[% exp.qc_origin_well %] - [% exp.experiment_name %]: [% exp.gene %]</h3>
    <table class="table table-striped">
         <tr>
            <td>Experiment ID</td>
            <td>[% exp.experiment_id %]</td>
        </tr>       
        <tr>
            <td>Design ID</td>
            <td>[% exp.design_id %]</td>
        </tr>
        <tr>
            <td>Gene ID</td>
            <td>[% exp.gene_id %]</td>
        </tr>
        <tr>
            <td>Gene Symbol</td>
            <td>[% exp.gene %]</td>
        </tr>
        <tr>
            <td>Species</td>
            <td>[% exp.species %]</td>
        </tr>
    </table>
    <div class="panel-group col-md-12" id="designs[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]">
        <div class="panel panel-default">
            <div class="panel-heading" id="allelesHeader">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#designs[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]" 
                        href="#desColl[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]">
                        Design
                    </a>
                </h4>
            </div>
            <div id="desColl[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]" class="panel-collapse collapse">
                <table class="table table-striped">
                    <tr>
                        <td>Design</td>
                        <td>[% exp.design_id %]</td>
                    </tr>
                    <tr>
                        <td>Gene ID</td>
                        <td>[% exp.gene_id %]</td>
                    </tr>
                    <tr>
                        <td>Gene Symbol</td>
                        <td>[% exp.gene %]</td>
                    </tr>
                    <tr>
                        <td>Crisprs</td>
                        <td>[% crisprs %]</td>
                    </tr>
                </table>
                <div class="col-md-12">
                    [% FOREACH oligo IN exp.design_oligos %]
                        <table class="table table-striped">
                            <tr>
                                <td>Primer</td>
                                <td>[% oligo.name %]</td>
                            </tr>
                            <tr>
                                <td>Chr Start</td>
                                <td>[% oligo.start %]</td>
                            </tr>
                            <tr>
                                <td>Chr End</td>
                                <td>[% oligo.end %]</td>
                            </tr>
                        </table>
                    [% END %]
                </div>
            </div>
        </div>
    </div>
    <h4>Read Quantification - [% exp.classification %]</h4>
    <div class="col-md-12">
        <div id="[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]" class="donuts col-md-6">

        </div>
        <div class="col-md-6">
            <table class="table table-striped">
                 <tr>
                    <th>Call</th>
                    <th>#Read</th>
                    <th>%Read</th>
                </tr>       
                <tr>
                    <td>Wild Type</td>
                    <td>[% exp.read_counts.wt.count %]</td>
                    <td>[% exp.read_counts.wt.perc %]%</td>
                </tr>
                <tr>
                    <td>NHEJ</td>
                    <td>[% exp.read_counts.nhej.count %]</td>
                    <td>[% exp.read_counts.nhej.perc %]%</td>
                </tr>
                <tr>
                    <td>HDR</td>
                    <td>[% exp.read_counts.hdr.count %]</td>
                    <td>[% exp.read_counts.hdr.perc %]%</td>
                </tr>
                <tr>
                    <td>Mixed HDR-NHEJ</td>
                    <td>[% exp.read_counts.mix.count %]</td>
                    <td>[% exp.read_counts.mix.perc %]%</td>
                </tr>
            </table>
        </div>
    </div>
    <div class="panel-group col-md-12" id="alleles[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]">
        <div class="panel panel-default">
            <div class="panel-heading" id="allelesHeader">
                <h4 class="panel-title">
                    <a role="button" data-toggle="collapse" data-parent="#alleles[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]"
                        href="#collapse[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]">
                        Alleles Frequency
                    </a>
                </h4>
            </div>
            <div id="collapse[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]" class="panel-collapse collapse">
                <table id="freq[% exp.qc_origin_plate %]_[% exp.qc_origin_well %]" class="table table-striped table-bordered"></table>
            <div>
        </div>
    </div>
[% END %]

[% INCLUDE 'user/pointmutation/miseq_alleles_frequency.tt' %]
[% INCLUDE "user/pointmutation/miseq_donut_d3_setup.tt" %]

<script type="text/javascript" charset="utf-8">
var data = '[% tables %]';
data = jsonify(data);

$(document).ready(function() {
    fillTables();
    setRingDimensions();
    ringSVG();
    //createRings();
});

function jsonify(raw) {
    return JSON.parse(raw.replace(/&quot;/g,'"'));
}

function fillTables() {
    var expNames = Object.keys(data);
    var colNames = $('#allele').children().map(function(i) {
        return i.className;
    });

    expNames.forEach(function(exp) {
        var rowDetails = data[exp];
        var columns = rowDetails.data.headers;
        columns = columns.filter(function(col) { return col != "Reference_Sequence" });
        
        var table = document.getElementById('freq' + exp);
        var tHead = table.createTHead();
        var headerRow = tHead.insertRow(0);
        for (var i = 0; i < columns.length; i++) {
            var hCell = headerRow.insertCell(i);
            $(hCell).text(columns[i]);
        }

        var rowData = rowDetails.data.rows;
        var tBody = table.createTBody();
        rowData.forEach(function(rData) {
            var row = tBody.insertRow(-1);
            for (var i = 0; i < columns.length; i++) {
                var cell = row.insertCell(i);
                if (columns[i] == 'Aligned_Sequence') {
                    $(cell).html('<div class="seq' + exp + ' sequence">' + highlightBases(rData[columns[i]], rowDetails.crisprs, rData.Reference_Sequence) + '</div>');
                } else {
                    $(cell).text(rData[columns[i]]);
                }
            }
        });

        $('.seq' + exp + ':last').css('overflow-x','scroll');
        $('.seq' + exp + ':last').scroll(function() {
            $('.seq' + exp).scrollLeft($(this).scrollLeft());
        });
    });
}

function setRingDimensions() {
    width = 450,
    height = 175,
    radius = 60,
    arcWidth = 15,
    fsRadius = radius - arcWidth;
    rebuildArcs();
}

function ringSVG() {
    var svg = d3.selectAll('.donuts')
        .append("svg:svg")
        .attr("width", '100%')
        .attr("height", height)
        .attr("class","svgTool")
        .append("svg:g")
        .attr("class","node")
        .attr("transform", function(d){ return "translate(" + width / 2 + "," + height / 2 + ")"});
}

</script>
