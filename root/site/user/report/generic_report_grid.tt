<script type="text/javascript" charset="utf-8">
        Ext.onReady( function() {

            Ext.define('Report', {
                extend: 'Ext.data.Model',
                fields: [
                    [%- FOREACH col IN columns %]
                    { name: '[%- col %]', type: 'string' },
                    [%- END %]
                ]
            });

[%# first_time_outer is all about where to put the comma to avoid trailing commas that confuse some browsers %]
            var arrayData = [
                    [%- first_time_outer = 1 %]
                    [%- FOREACH datum IN data %]
                        [%- IF first_time_outer == 1 %]
                            {
                        [%- ELSE %]
                            ,{
                        [%- END %]

                            [%- first_time_inner = 1 %]
                            [%- index = 0 %]
                            [%- FOREACH val IN datum %]
                                [%- IF first_time_inner == 1 %]
                                    [%- first_time_inner = 0 %]
                                    "[%- columns.$index %]": "[%- val %]"
                                [%- ELSE %]
                                    [%#- first time, check whether there is a 'custom:' flag
                                        this will be rendered as a button so save it to the alt_render array
                                    %]
                                    [%- IF (first_time_outer == 1) && (val.match('custom')) %]
                                    // string matched 'custom' specifier
                                        [%- alt_render.${columns.$index} = 1 %]
                                    [%- END %]
                                    ,"[%- columns.$index %]": "[%- val %]"
                                [%- END %]
                                [%- index = index + 1 %]
                            [%- END %]
                        }
                    [% first_time_outer = 0 %]
                    [%- END %]
                    ];

            // Save plateName for later use
            var plateName= '[%- title _ ' (' _ data.size _ ' rows)'%]';

            var store = Ext.create('Ext.data.Store', {
                model: Report,
                data: arrayData
            });

            [% locked = {
                "row id" = 1
                "well name" = 1
                "design id" = 1
                "gene id" = 1
                "gene symbol" = 1
                } %]
            [% hidden = {
                "gene id" = 1
                "row id" = 1
                } %]

            var columns = [
                [%- FOREACH col IN columns %]
                {
                    header: "[%- col %]",
                    [%- IF locked.${col.lower} == 1 %]
                    locked: true,
                    [%- END %]
                    [%- IF hidden.${col.lower} == 1 %]
                    hidden: true,
                    [%- END %]
                    [%# alt_render values are case sensitive %]
                    [%- IF alt_render.$col == 1%]
                    renderer: lims2_action_button,
                    [%- ELSE %]
                    sortable: true,
                    [%- END %]
                    dataIndex: '[%- col %]'
                },
                [%- END %]
            ];
    
            // locked columns cause the colIndex to return a value of (expected - locked_col_count)
            // ExtJS4.2.1 bug?
            var locked_column_count = 0;
            var col_arr_length = columns.length;
            for (var c = 0; c < col_arr_length;  c++) {
                if (columns[c].hasOwnProperty('locked')) {
                    ++locked_column_count;
                }
            }

            // For a renderer, val is data value for the current cell
            // Rec is the object representing the current record from the model
            // 
            function lims2_action_button(val, meta, rec, rowindex, colindex) {
                    var id = Ext.id();
                    Ext.defer(function () {
                        var col_head = columns[colindex + locked_column_count].header;
                        var api_url = rec.get(col_head).match( /button_label=(.*?[^;]);api_url=(.*?[^;]);(.*$)/ );
                        var button_label = api_url[1];
                        var api_base = api_url[2].substr(1); // remove the opening slash as c.uri_for provides it
                        var api_replace = api_url[3].replace(/;/g , '&' ); // construct argument list for URL as we cannot do that in TT
                        api_replace = api_replace.substr(0, api_replace.length - 1); // remove the stray ampersand at the end of the URL 
                        Ext.widget('button', {
                            renderTo: id,
                            text: button_label,
                            width: 75,
                            handler: function () { window.open( "[% c.uri_for('/') %]" + api_base + '?' + api_replace ) }
                        });
                    }, 50);
                    return Ext.String.format('<div id="{0}"></div>', id);
                };

            var grid = Ext.create('Ext.grid.Panel', {
                height: 750,
                width: 1200,
                store: store,
                columnLines: true,
                columns: columns,
                title: plateName,
                invalidateScrollerOnRefresh: false,
                renderTo: 'my_results',
                viewConfig: {
                    stripeRows: true,
                    getRowClass: function(){
                        return "lims2-cell-inner";
                    },
                    firstCls: 'lims2-first-cell-format',
                    enableTextSelection: true
                },
                selType: 'cellmodel',
                simpleSelect: true,
                plugins: [
                    Ext.create('Ext.grid.plugin.CellEditing', { clicksToEdit: 2 })
                ]
            });
    });
</script>
