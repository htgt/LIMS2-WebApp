[% META title="View Sequencing Traces"; META tab_name = 'QC' %]

<style type="text/css">
.seqName {
    color: blue;
    text-decoration: underline;
    cursor: pointer;
}
</style>

<link rel="stylesheet" type="text/css" href="[% c.uri_for( '/static/css/traceviewer.css', {id=1} ) %]">

<!--[if lte IE 8]><script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/excanvas.min.js' ) %]"></script><![endif]-->
<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/jquery.flot.min.js' ) %]"></script>
<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/jquery.flot.navigate.min.js' ) %]"></script>
<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/jquery.flot.traceviewer.js', {id=>3} ) %]"></script>
<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/crispr-qc.js' ) %]"></script>
<script type="text/javascript">
    api_url = '[% c.uri_for("/api/update_crispr_es_qc_well") %]'
</script>
<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/crispr-es-qc-well-update.js' ) %]"></script>


<div class="page-header">
  <h1>View Sequencing Traces</h1>
</div>

<div class="form-horizontal">

  <div class="span6 offset3">
    <form method="POST" id="view_traces" action="[% c.uri_for( '/user/qc/view_traces' ) %]" class="form well"  enctype="multipart/form-data" >


    <div class="control-group">
      <label class="control-label" for="sequencing_project">Sequencing Project</label>
      <div class="controls">
          <input name="sequencing_project" id="sequencing_project" type="text"
            [% IF sequencing_project %]value="[% sequencing_project %]"[% END %] />
      </div>
    </div>

    <div class="control-group hidden" id="download_reads_button">
      <div class="controls">
      <button name="download_reads" id="download_reads" type="submit" value="download_reads" class="btn btn-info">
        <i class="icon-download-alt icon-white"></i> Download Reads (all sub-projects)
      </button>
      </div>
    </div>

    <div class="control-group">
      <label class="control-label" for="sequencing_sub_project">Sequencing Sub Project</label>
      <div class="controls">
        <select name="sequencing_sub_project" id="sequencing_sub_project" type="text">
        </select>

        <!-- <input name="sequencing_sub_project" id="sequencing_sub_project" type="text"
            [% IF sequencing_sub_project %]value="[% sequencing_sub_project %]"[% END %] /> -->
      </div>
    </div>
    <input type="hidden" name="primer_data" id="primer_data" value="[% primer_data %]">

    <div class="control-group">
      <label class="control-label" for="primer_names">Primer Read Counts</label>
      <div class="controls">
          <input id="primer_names" name="primer_names" value="" disabled />
      </div>
    </div>

    <div class="control-group">
      <div class="controls">
      <button name="get_reads" id="get_reads" type="submit" value="get_reads" class="btn btn-primary">
        Fetch Reads <i class="icon-arrow-right icon-white"></i>
      </button>
      </div>
    </div>

    </form>
  </div>

</div>

[% IF reads %]
<table class="table span12" style="table-layout:fixed">
    <thead>
        <tr>
            <th class="span3">Read</th>
            <th class="span9">Trace <button class="btn btn-mini" id="hide_all_traces">Hide All Traces</button></th>
        </tr>
    </thead>
    <tbody>
        [% FOR read IN reads %]
            <tr>
              <td rowspan="2">[% read.orig_read_name %]</td>
              <td style="word-wrap:break-word" class="trace_sequence">[% read.seq %]</td>
            </tr>
            <tr>
               <td>
               <div class="forward_full" style="display:none"></div>
        <a class="btn traces" href="#" data-fwd="[% read.orig_read_name %]" data-context="15" >View Traces</a>
               </td>
            </tr>
        [% END %]
    </tbody>
</table>

[% ELSE %]

<table class="table span6 offset3" style="table-layout:fixed" align="center">
    <thead>
        <tr><th><h4>Recently Added</h4></th></tr>
        <tr>
            <th class="span2">ID</th>
            <th class="span3">Name</th>
            <th>Results Imported Date</th>
        </tr>
    </thead>
    <tbody>
        [% FOR result IN recent_results %]
            <tr>
                <th>[% result.id %]</th>
                <th class=seqName>[% result.name %]</font></th>
                <th>[% result.results_imported_date %]</th>
            </tr>
        [% END %]
    </tbody>
</table>

[% END %]

<script type="text/javascript" charset="utf-8">
//Object.keys support for IE6/7/8
if ( ! Object.keys ) {
  Object.keys = function (obj) {
    var op, result = [];
    for (op in obj)
      if ( obj.hasOwnProperty(op) ) result.push(op)

    return result;
  }
}

var tv;

$(document).ready(function() {
  $(".seqName").click( function(e) {
    $("#sequencing_project").val(e.target.innerHTML);
    $("#sequencing_project").autocomplete("search");
  });

  $("#sequencing_sub_project").change(function() {
    var primer_data = $("#sequencing_sub_project option:selected").data();

    if ( primer_data ) {
      var names = Object.keys(primer_data);

      var primers = [];
      for ( var i = 0; i < names.length; i++ ) {
        var name = names[i];

        primers.push(name + " (" + primer_data[name] + ")");

      }

      $("#primer_names").val( primers.join(", ") );
    }
    else {
      $("#primer_names").val("");
    }
  });

  function populate_subproject_list(data, selected_value){
    // Show the dowload button at the same time
    $("#download_reads_button").removeClass('hidden');

    console.log("primer data: ");
    console.log(data);
    $("#sequencing_sub_project").empty();

    var plates;

    var sorted_keys = Object.keys(data).sort();

    for (var i = 0; i < sorted_keys.length; i++) {
      var sub_project = sorted_keys[i];

      var opt = $("<option>", { value: sub_project, text: sub_project });

      //store primer information in the option
      opt.data(data[sub_project]);
      opt.appendTo( $("#sequencing_sub_project") );

      if(sub_project == selected_value){
        console.log('selecting sub-project ' + sub_project);
        opt.attr("selected","selected");
      }
    }

    //trigger primer names update
    $("#sequencing_sub_project").change();
  }

  // Check for primer data element
  // If available fetch json data from it and use it to populate subproject options
  if( $("#primer_data").val() ){
    var data = JSON.parse( $("#primer_data").val() );
    console.log("populating sub-projects with preloaded primer data");
    populate_subproject_list(data, "[% sequencing_sub_project %]");
  }

  $("#sequencing_project").autocomplete({
    autoFocus: true,
    source: "[% c.uri_for( '/api/autocomplete/badger_seq_projects' ) %]",
    minLength: 5,
    select: function (event, ui) {
     $.getJSON(
       '[% c.uri_for( "/api/autocomplete/seq_read_names" ) %]',
       { term: ui.item.value },
       function (data) {

          // remove any existing primer data form field and replace with new one
          $("#primer_data").remove();
          $("#view_traces").append("<input type='hidden' name='primer_data' id='primer_data' value='" + JSON.stringify(data) + "'>");

          // populate sub project list
          populate_subproject_list(data,'');
       }
     );
    }
  });

  $("#download_reads_button").click(function(e){
    e.preventDefault();
    // go to read dowload link with value from sequencing project select field
    var seq_project = $("#sequencing_project").val();
    var download_uri = "[% c.uri_for('/user/download_reads') %]";
    window.location.href = download_uri + "?sequencing_project=" + seq_project;
  });

  $(".traces").click(function(e) {
    e.preventDefault();
    //the code for this is inside jquery.flot.traceviewer.js
    tv = new TraceViewer( "[% c.uri_for('/public_api/trace_data') %]", $(this), 20 );
  });

  // Decided not to do this as it takes ages to get them all
  // and we don't want to overload lims2
  //$("#show_all_traces").click(function(){
  //  $(".traces").click();
  //});

  $("#hide_all_traces").click(function(){
    // Remove the trace plots
    $(".demo-container").remove();

    // Remove any sequence highlighing
    $(".trace_sequence").each(function(i,seq_td){
      $(seq_td).html($(seq_td).text());
    });

    // Hide the hide traces buttons
    $(".hide-traces").remove();
    // Show the show traces buttons
    $(".traces").show();
  });

});
$(document).click(function(event) {
    var text = $(event.target);
    
    if (window.getSelection && tv) {
        adjustPane(text);
    }

});

function adjustPane(text) {
    var userRange = window.getSelection().getRangeAt(0);
    var selection = userRange.startContainer.textContent;
    
    var tr = text.closest("tr");
    tr = tr.html();
    tr = tr.replace(/-/g,'N');
    var regex = /[ACTGN]+/g;
    var match;
    var result = tr.match(regex);
    result.shift(); result.shift();

    var referencePoint = tv.fwd_plot._pos;
    
    var customSelection = window.getSelection().toString();
    
    var loc = findCoords(result, referencePoint, selection, userRange.startOffset);

    if (customSelection) {
        var customLength;
        if (result.length > 1) {
            customLength = loc + (customSelection.length * 12);
            tv.moveToPoint(tv.fwd_plot, loc, customLength);
        } else {
            loc = (userRange.startOffset * 12) + 200;
            customLength = loc + (customSelection.length * 12);
            tv.moveToPoint(tv.fwd_plot, loc, customLength);
        }
    } else if (result.length > 1) {
        tv.moveToPoint(tv.fwd_plot, loc - 125, loc + 125);  
    } else {
        loc = (userRange.startOffset * 12) + 200;
        tv.moveToPoint(tv.fwd_plot, loc - 125, loc + 125);
    }
}

function findCoords(seqs, point, selectedSeq, offset) {
    var read = tv.fwd_plot._read;
    var index;
    seqs.forEach( function(seq, i) {
        if (seq === selectedSeq) {
            index = i;
        }
    });
    var sizes = getSeqLengths(seqs);
    var refLoc = sizes[0];
    var total = 0;
    while (index > 0) {
        index--;
        total += sizes[index];
    }
    total += offset;
   
    var cost = (total - refLoc) * 12;
    cost = cost + Math.round(point);
    return cost;
}

function getSeqLengths(seqs){
    var sizes = [];
    seqs.forEach( function(seq) { 
        sizes.push(seq.length);
    });
    return sizes; 
}


</script>
