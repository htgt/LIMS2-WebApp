<style>

</style>

[% INCLUDE 'plate_grid_view.tt' rows = 8 columns = 12 letters_on = "row" row_pixel = 50 column_pixel = 50 %]

<div id="response" class="alert"></div>
<div class="page-header">
  <h1>PIQ Plate</h1>
</div>
<div class="container">
    <div id="plateDetails">
        <h3>Plate Details</h3>
        <table class="table table-striped">
            <tr>
                <td>
                    <label>PIQ Plate Name: </label>
                </td>
                <td>
                    <div class="col-md-4">
                        <input type="text" class="form-control" id="plateName">
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <h3>Parent Plates</h3>
    <div class="row">
        <div class="col-md-2">
            <label>Parent Plate Name:</label>
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" id="parentPlate">
        </div>
        <div class="col-md-1">
            <button class="btn btn-warning" id="addPlate"><i class="glyphicon glyphicon-plus"></i> Add</button>
        </div>
    </div>
    <br>
</div>

<div id="miseq">
    <table id="parentCollection" class="table table-striped" hidden>
        <tr>
            <th>
                Name
            </th>
            <th>
                Type
            </th>
            <th>
                Colour
            </th>
            <th>
                Clear
            </th>
        </tr>
    </table>
    <br>
<div>

<div id="plateVisual">
    <div id="plateRow" class="col-md-12">
        <div class="col-md-4">
            <h4>Parent Plate: </h4>
            <select id="freezeName" class="btn btn-default">
                <option value="-">Parent Plate</option>
            </select>
        </div>
        <div id="firstSplit" class="col-md-12"></div>
            <div class="row col-md-12">
                <div class="col-md-4">
                    <h4>Rearray Plate: </h4>
                    <h4 id="miseqName">PIQ Plate Name</h4>
                </div>
                <div class="col-md-4">
                    <h4>Process: dist_qc</h4>
                </div>
            </div>
        <div id="secondSplit" class="col-md-12"></div>
    </div>
    <div class="row">
        <button type="button" class="btn btn-danger" onclick="clearPlate();">
            Clear <i class="glyphicon glyphicon-remove"></i>
        </button>
        <button type="button" class="btn btn-primary">
            Submit <i class="glyphicon glyphicon-edit"></i>
        </button>
    </div>
</div>

[% INCLUDE 'user/plateupload/rearray_interface.tt' %]

<script>

$(function () {
    var isMouseDown = false;
    var startIndex;

    $("#secondSplit")
        .mousedown(function(evt) {
            startIndex = highlighter(evt.target);
            isMouseDown = true;
            console.log("Down.");
        })
        .mouseover(function(evt) {
            if (isMouseDown == true){
                highlighter(evt.target, startIndex);
            }
        });

    $('body').mouseup(function(evt) {
        if (isMouseDown == true) {
            console.log("Up.");
            isMouseDown = false;
            $('.selecting').removeClassesExcept('square fpWell miWell selecting');
            $('.selecting').toggleClass('selecting ' + selectedColour);
            d3.selectAll('.' + selectedColour).style('fill', colourHash[selectedColour]);
            var key = $('#freezeName').val();
            if (key != '-') {
                console.log('Triggered - body up');
                $('.miWell.' + selectedColour).map(function() { return trackWells(key, this); });
                checkTile(selectedColour);
            }
        }
    });
});

$("#plateName").autocomplete({
    source: function(request, response) {
        $.getJSON("[% c.uri_for( '/api/autocomplete/plate_names/' ) %]",
        {
            term : $('#plateName').val(),
            type : 'PIQ',
        }, response);
    },
    select: function(evt, ui) {
        plateAncestors(ui.item.value);
    },
    minLength: 2,
});

function plateAncestors(selection) {
    console.log(selection);
    $.ajax({
        dataType: 'json',
        url: '[% c.uri_for('/api/wells_parent_plate') %]',
        data: { plate: selection },
    }).done(function(data){
        console.log(data);
        $('#parentCollection').show();
        var plates = Object.keys(data);
        for (var i = 0; i < plates.length; i++) {
            var plate = plates[i];
            if (parentPlates.indexOf(plate) == -1) {
                addTableRow({ 
                    name:   plate, 
                    type:   data[plate].type,
                    colour: 1
                });
                addOption({ 
                    name: plate,
                    type: data[plate].type
                });
            }
        }
    });

}

function trackWells(key, well) {
    var freezerDetails = {
        parentWell: well.value,
        parentPlate: key
    };

    miseqData[$(well).parent()[0].id] = freezerDetails;
}

function checkTile(selectedColour) {
    var currentFpMapping = findFpWells(miseqData);

    $('.fpWell.' + selectedColour).map(function(index, well) { 
        var wellName = well.parentNode.id;
        if (!(wellName in currentFpMapping)) {
            d3.select(well).style('fill', 'white');
        }
        return;
    });
}

function findFpWells(mapData) {
    var parentChildMapping = {};
    for (var childWell in miseqData) {
        if (miseqData[childWell].parentPlate == $('#freezeName').val()) {
            parentChildMapping[miseqData[childWell].parentWell] = childWell;
        }
    }
    return parentChildMapping;
}

function wellHistory(plate) {
    var fpRelations = findFpWells(miseqData);
    var fpWells = Object.keys(fpRelations);
    $('.fpWell').removeClassesExcept('square fpWell');

    fpWells.forEach(function(fp) {
        var container = $('g#' + fp)[0];
        var rect = $(container).children('rect')[plate];
        d3.select(rect).classed(selectedColour, true);
    });

    d3.selectAll('.fpWell.' + selectedColour).style('fill', colourHash[selectedColour]);
}

function auditTables() {
    //$('.fpWell').removeClassesExcept('square fpWell selecting');
    //$('.miWell').removeClassesExcept('square miWell selecting');
    for (var miseqWell in miseqData) {
        console.log(miseqWell);
    }
}


</script>
