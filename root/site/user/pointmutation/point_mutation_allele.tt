[%- META title = 'Point Mutation Alleles' %]
<style>
body { 
    padding-bottom: 65px; 
}

.lb-md {
    font-size: 22px;
}

.lb-colour {
    font-size: 22px;
    height: 20px;
}

.images {
    max-width: 60%;
    max-height: 60%;
}

.details {
    margin-left: 0 auto;
}

.baseA {
    background-color: #63aa5a;
    color: white;
}

.baseC {
    background-color: #e4ed6d;
    color: black;
}

.baseT {
    background-color: #45719b;
    color: white;
}

.baseG {
    background-color: #e88d1e;
    color: black;
}

.base- {
    background-color: #cc1019;
    color: white;
}

.target {
    background-color: #0a606d;
    color: white;
}

.sequence {
    width: 400px;
    white-space: nowrap;
    font-family: "Lucida Console", Monaco, monospace;
    overflow-x: hidden;
}

 /* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

/* Hide default HTML checkbox */
.switch input {display:none;}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked + .slider {
    background-color: #2196F3;
}

input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}

</style>

<div class="page-header row">
    <div class="col-md-5">
        <h1>Point Mutation Alleles - [% oligo_index %]</h1>
    </div>    
    <div class="col-md-4 col-md-offset-3">
        <div class="col-md-7">
            <label class="lb-colour">Display Colours: </label>
        </div>
        <div class="col-md-4">
            <label class="switch">
                <input type="checkbox">
                <div class="slider round"></div>
            </label>    
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <button class="btn btn-primary" onclick="overview();">
            <i class="glyphicon glyphicon-arrow-left"></i> Back to Overview 
        </button>
    </div>
</div>

<br>

<div class="clearfix row">
    <div class="col-md-2">
        <label class="lb-md">Classification: </label>
    </div>
    <div class="col-md-2">
        <select class="form-control" align="center" id="classSelect">
            <option value="Not called" selected="selected">Not called</option>
            <option value="Wild type">Wild Type</option>
            <option value="Het">Het</option>
            <option value="Hom1">Hom - 1 Allele</option>
            <option value="Hom2">Hom - 2 Alleles</option>
            <option value="Mixed">Mixed</option>
        </select>
    </div>

</div>
<br>
<div class="row">
    <div class="col-md-6">
        <table class="details table table-striped">
            <tr>
                <td>Illumina Index</td>
                <td>[% oligo_index %]</td>
                <td></td>
            </tr>
            <tr>
                <td>Well Barcode</td>
                <td>[% well_name %]</td>
                <td></td>
            </tr>
            <tr>
                <td>Barcode</td>
                <td id="barcode">This is a barcode</td>
                <td></td>
            </tr>
            <tr>
                <td>Status</td>
                <td id="statusContainer">Freezer</td>
                <td><button class="btn btn-info">Change Status <i class="glyphicon glyphicon-pencil"></i></button></td>
            </tr>
        </table>
    </div>
</div>
[% IF selection %]
    <div class="row">
        <div class="col-md-4">
            <button class="btn btn-warning" onclick="showAll();">Show All Experiments <i class="glyphicon glyphicon-filter"></i></button>
        </div>
    </div>
    <h2>Experiment: [% selection %]</h2>
    <div class='genes [% selection %]'></div>
    <div class="row">
        <div class="col-md-3">
            <button class="allele btn btn-primary" onclick="displayIndels([% selection %])" value='[% selection %]'>
                Allele Frequency - [% selection %]  <i class="glyphicon glyphicon-chevron-down"></i>
            </button>
        </div>
        <div class="col-md-3">
            <button id="dl[% selection %]" class="download btn btn-success" value="[% selection %]">
                Download CSV <i class="glyphicon glyphicon-download-alt"></i>
            </button>
        </div>
    </div>
    <div id='[% selection %]'></div>

[% ELSE %]
    [% FOREACH experiment IN experiments %]
        <h2>Experiment: [% experiment %]</h2>
        <div class='genes [% experiment %]'></div>
        <div class="row">
            <div class="col-md-2">
                <button class="allele btn btn-primary" onclick="displayIndels([% experiment %])" value="[% experiment %]">
                    Allele Frequency - [% experiment %]  <i class="glyphicon glyphicon-chevron-down"></i>
                </button>
            </div>
            <div class="col-md-2">
                <button id="dl[% experiment %]" class="download btn btn-success" value="[% experiment %]">
                    Download CSV <i class="glyphicon glyphicon-download-alt"></i>
                </button>
            </div>
        </div>
        <div id='[% experiment %]'></div>
    [% END %]
[% END %]

<script type="text/javascript" charset="utf-8">

var exps = [];
$(document).ready(function() {
    $('.download').hide();
    $('.genes').each(function() {
        $($(this).attr('class').split(/\s+/)).each(function() {
            var exp = this.toString();
            if (exps.includes(exp) == false && exp != 'genes') {
                exps.push(exp);
            }
        });
    });

    for (var expIndex = 0; expIndex < exps.length; expIndex++) {
        getImages(exps[expIndex], '[% indel %]');
        //getSummary(exps[expIndex]);
    }
});
var test;
$('.allele').click(function() {
    $(this).find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
    var value = $(this).val();
    test = $(this);
    console.log($(this));
    console.log("This values " + value); 
    $('#dl' + value).toggle();
});

$('.download').click(function() {
    var value = $(this).val();
    getSummary(value,'1');
});

var test;

function displayIndels(exp) {
    var expTable = document.getElementById("table" + exp.id);
    if (expTable == null) {
        getSummary(exp.id);
    }
    else {
        toggleTable("table" + exp.id);
    }
}

function toggleTable(table) {
    var expTable = document.getElementById(table);
    expTable.style.display = (expTable.style.display == "table") ? "none" : "table";
}

function getImages(letter, chart, div) {
    var index = '[% oligo_index %]';
    
    $.ajax({
        url: '[% c.uri_for('/api/point_mutation_img/') %]',
        type: "GET",
        contentType: 'image/png',
        data: {
            oligo: index,
            experiment: letter,
            name: chart
        },
        success: function(result){
            if (div == null) {
                $('.' + letter).html('<img src="data:image/png;base64,' + result + '"/>');
            } else {
                $('#' + div).html('<img src="data:image/png;base64,' + result + '"/>');
            }
        },
        error: function() {
            console.log('Failure to receive indel size distribution graph for ' + letter);
            $('.' + letter).html('<p>Unable to retrieve graph for well ' + index + ' experiment ' + letter + '</p>');
        }
    });
}

function getSummary(letter, downloadFlag) {
    console.log("summary");
    console.log(letter);
    var index = '[% oligo_index %]';
    var res; 
    if (downloadFlag == null) {
        //Preview for tables
        $.ajax({
            url: '[% c.uri_for('/api/point_mutation_summary/') %]',
            type: "GET",
            contentType: 'text/plain',
            data: {
                oligo: index,
                experiment: letter,
                limit: 10,
            },
            success: function(result){
                createTable(letter, result);
            },
            error: function() {
                $('#' + letter).html('<p>Allele frequency summary for well ' + index + ' experiment ' + letter + ' was not found.</p>');
            }
        });
    } else {
        //Full summary for downloading
        console.log("else");
        console.log(index);
        console.log(letter);
        $.ajax({
            url: '[% c.uri_for('/api/point_mutation_summary/') %]',
            type: "GET",
            contentType: 'text/plain',
            data: {
                oligo: index,
                experiment: letter,
            },
            success: function(result){
                console.log("success");
                downloadCSV(letter, result);
            },
            error: function() {
                console.log("Failed to retrieve data");
            }
        });
    }
    return res;
}

function createTable(exp, result) {
    var rows = result.split("\n");
    console.log(rows);
    $('#' + exp).append('<table id="table' + exp + '" class="table table-striped table-bordered"></table>');
    var table = document.getElementById("table" + exp);
    var header = table.createTHead();
    var headerRow = header.insertRow(0);
    var headers = rows.shift().split(",");

    for (var count = 0; count < headers.length; count++) {
        var headerCell = document.createElement("TH");
        headerCell.innerHTML = headers[count];
        headerRow.appendChild(headerCell);
    }

    var body = table.createTBody();

    for (var rowCount = 0; rowCount < rows.length; rowCount++) {
        if (rows[rowCount] == "") {
            continue;
        }
        var bodyRow = body.insertRow(-1);
        var rowData = rows[rowCount].split(",");
        for (var cellCount = 0; cellCount < rowData.length; cellCount++) {
            var bodyCell = bodyRow.insertCell(-1);
            if (cellCount == 0) {
                var highlight = highlightBases(rowData[cellCount]);
                
                bodyCell.innerHTML = '<div class="seq' + exp + ' sequence" style="width: 400px;">' + highlight + '</div>';
            } else {
                if ($.isNumeric(rowData[cellCount])) {
                    rowData[cellCount] = Math.round(rowData[cellCount] * 100) / 100;
                }
                bodyCell.innerHTML = rowData[cellCount];
            }
        }
    }

    table.style.display = "table";
    $('.seq' + exp + ':last').css('overflow-x','scroll');
    $('.seq' + exp + ':last').scroll(function() {
        $('.seq' + exp).scrollLeft($(this).scrollLeft());
    });
}

function highlightBases(seq) {
    var formattedSequence = "";
    for (var base = 0; base < seq.length; base++) {
        var letter = seq[base];
        var format = '<span class="base' + letter + '">' + letter + '</span>';
        formattedSequence += format;
    }
    return formattedSequence;
}

function showAll() {
    window.location.href = '[% c.uri_for('/user/point_mutation_allele/') %]' + encodeURI('?oligoIndex=[% oligo_index %]'); 
}

function overview() {
    window.location.href = '[% c.uri_for('/user/point_mutation/') %]'; 
}

function downloadCSV(letter, result) {
    var hiddenElement = document.createElement('a');
    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(result);
    hiddenElement.download = 'MiSeq_[% oligo_index %]_exp' + letter + '.csv';
    document.body.appendChild(hiddenElement);
    hiddenElement.click();
}

</script>
