<style>
.virtual_plate {
    background-color: #f2dede;
}
.plate_links {
    list-style-type: none;
    padding-left: 0;
}
</style>

<div id="response_alert" class="col-md-12"></div>
<div class="page-header">
  <h1>[% title %]
  <a class="btn btn-info" href="[% c.uri_for( '/user/report/download', report_id ) %]">
    <i class="glyphicon glyphicon-download-alt"></i> Download CSV</a>
  </h1>
</div>


[% INCLUDE 'pagination.tt' pageset = pageset %]

[%- MACRO linkify(v) BLOCK %]
    [% IF v.match( '^https?:' ) %]
<a href="[% v %]">Link</a>
    [% ELSIF v.match( 'lims2_custom' ) %]
        [%- USE JSON %]
        [%- v_json = JSON.json_decode( v ) %]
        [%- button_label = v_json.lims2_custom.button_label %]
        [%- tab_target = v_json.lims2_custom.browser_target %]
        [%- api_url = v_json.lims2_custom.api_url %]
<a class="btn btn-info btn-sm"
        <a href="[% c.uri_for( api_url, v_json.lims2_custom )
                 %]" target="[% tab_target %]">[% button_label %]</a>
    [% ELSIF v.match( 'lims2_combo' ) %]
        [%- USE JSON %]
        [%- v_json = JSON.json_decode( v ) %]
        [%- api_base = v_json.lims2_combo.api_base %]
        [%- api_params = v_json.lims2_combo.api_params %]
        [%- selected = v_json.lims2_combo.selected %]
        <select class="lims2_combo span2" data-url="[% api_base %]" data-params="[% api_params %]">
          [% FOREACH option IN v_json.lims2_combo.options %]
            <option value="[% option.0 %]" [% IF option.0 == selected %]selected[% END %]>[% option.1 %]</option>
          [% END %]
        </select>
    [% ELSE %]
        [% v %]
    [% END %]
[% END %]
<br/>

<table class="table table-striped table-bordered">
  <thead>
    <tr id="table_header_row">
      [%- FOR col IN columns %]
        [% IF col == 'Existing FPs' %]
          <th>Existing Freeze Plates</th>
        [% ELSE %] 
          <th>[% col %]</th>
        [% END %]
        [% IF col == 'Well ID' %]
          [% SET well_id_index = loop.index %]
        [% ELSIF col == 'Cell Number' %]
          [% SET cell_num_index = loop.index %]
        [% END %]
      [%- END %]
    </tr>
  </thead>
  <tbody>
    [%- FOR datum IN data %]
      <tr title="[% datum.0 %]">
      [%- FOR val IN datum %]
        [% classes = [] %]
        [% IF columns.item(loop.index) == 'Seq' %]
          [% classes.push('seq') %] 
        [% END %]
        [% IF plate_is_virtual %]
          [% classes.push('virtual_plate') %]
        [% END %]
        <td[% IF classes.size > 0 %] class="[% classes.join(' ') %]"[% END %]>
        [% IF columns.item(loop.index) == 'Freeze Plate' %]
          [% SET existing_fp_id = "existing_fp_" _ datum.$cell_num_index %]
          [% SET child_well_id = "child_wells_" _ datum.$cell_num_index %]
          [% SET well_name = "A" _ datum.$cell_num_index %]
          Colonies picked: <input type="number" value="96" id="[% child_well_id %]"><br>
          <input type="submit" value="Create" onclick="createFP('[% child_well_id %]', '[% well_name %]', '[% existing_fp_id %]')">
        [% ELSIF columns.item(loop.index) == 'Existing FPs' %]
          [% SET existing_fp_id = "existing_fp_" _ datum.$cell_num_index %]
          [% SET existing_fp_data = val.split(',') %]
          <ul class="plate_links" id="[% existing_fp_id %]">
          [% FOR item IN existing_fp_data %]
            [% IF loop.index % 2 == 0 %] 
              [% SET fp_name = item %]
            [% ELSE %]
              [% SET fp_id = item %]
              <li><a target="_blank" href="[% c.uri_for('/user/view_plate') %]?id=[% fp_id %]">[% fp_name %]</a></li>
            [% END %]
          [% END %]
          </ul>
        [% ELSIF columns.item(loop.index) == 'T7 Status' %]
          [% SET t7_status = val %]
          [% SET well_id = datum.$well_id_index %]
          [% SET t7_status_id = "t7_status_" _ datum.$cell_num_index %]
          <select id="[% t7_status_id %]" onchange="T7Change('[% t7_status_id %]', '[% well_id %]', 't7_status')">
          <option value="" selected disabled hidden>[% t7_status %]</option>
          <option value="-">-</option>
          <option value="pass">pass</option>
          <option value="fail">fail</option>
          </select>
        [% ELSIF columns.item(loop.index) == 'T7 Score' %]
          [% SET t7_score = val %]
          [% SET well_id = datum.$well_id_index %]
          [% SET t7_score_id = "t7_score_" _ datum.$cell_num_index %]
          <select id="[% t7_score_id %]" onchange="T7Change('[% t7_score_id %]', '[% well_id %]', 't7_score')">
          <option value="" selected disabled hidden>[% t7_score %]</option>
          <option value="0">0</option>
          <option value="10">10</option>
          <option value="20">20</option>
          <option value="30">30</option>
          <option value="40">40</option>
          <option value="50">50</option>
          <option value="60">60</option>
          <option value="70">70</option>
          <option value="80">80</option>
          <option value="90">90</option>
          <option value="100">100</option>
          </select>
        [% ELSE %]
          [% plate_id %][% linkify( val ) | none %]
        [% END %]
        </td>
      [%- END %]
      </tr>
    [%- END %]
  </tbody>
</table>

[% INCLUDE 'pagination.tt' pageset = pageset %]

<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/primer_validation_state.js', {v => 1} ) %]"></script>
<script language="javascript" type="text/javascript" src="[% c.uri_for( '/static/js/lims2_utils.js' ) %]"></script>
<script type="text/javascript">

    function createFP (childWellId, wellName, existingFpId) {
        var plateName = document.title;
        var childWellNumber = document.getElementById(childWellId).value; 
        if (childWellNumber > 0) {
            $("#response_alert").removeClass("alert-success").removeClass("alert-danger").addClass("alert-info");
            message = "Creating freeze plate(s)...";
            $("#response_alert").html(message);
            $.post( "[% c.uri_for('/user/epII/expansion') %]",
                {
                    "well_names[]":wellName,
                    plate_name:plateName,
                    "child_well_numbers[]":childWellNumber
                },
                function(result) { 
                    if (result['plates'].length > 0) {
                        var existingFpList = document.getElementById(existingFpId);
                        for (newFp in result['plates']) {
                            var existingFpLI = document.createElement('li');
                            existingFpLI.appendChild(document.createTextNode(result['plates'][newFp]));
                            existingFpList.insertBefore(existingFpLI, existingFpList.childNodes[0]);
                        }
                        $("#response_alert").removeClass("alert-info").removeClass("alert-danger").addClass("alert-success");
                        message = "Freeze plate(s) created: " + result['plates'];
                        $("#response_alert").html(message);
                    }
                    if (result['errors'].length > 0) {
                        $("#response_alert").removeClass("alert-info").removeClass("alert-success").addClass("alert-danger");
                        message = result['errors'];
                        $("#response_alert").html(message);
                    }
                }
            );
        }
    }

    function T7Change (t7Id, wellId, t7Type) {
        var t7Value = document.getElementById(t7Id).value;
        $.post( "[% c.uri_for('/api/well/save_well_t7_change') %]",
            {
                well_id:wellId,
                t7_type:t7Type,
                t7_value:t7Value
            }
        );
    }

  $(document).ready(function() {
    // Add functionality to comboboxes
    $(".lims2_combo").on("click focus keydown", function (){
      $(this).data("previous",$(this).val());
    });
    $(".lims2_combo").change(function (){
      var combo = $(this);
      var new_value = combo.val();
      var old_value = combo.data("previous");
      var params_string = combo.data("params");
      if( new_value != '-'){
        params_string = params_string + '&value=' + new_value;
      }
      var uri = "[% c.uri_for('/') %]" + combo.data("url") + '?' + params_string;
      $.getJSON( uri )

      .fail(function (data){
        console.log(data.responseText);
        console.log("Update failed. Returning value to " + old_value);
        combo.val(old_value);
        combo.data("previous", old_value);
      })
      .done(function(data){
        if('qc_verified' in data){
          console.log(data.qc_verified);
          label_cell = getCell('QC Verified?','Well Name',data.well_name);
          addQCVerifiedLabel(label_cell,data.qc_verified);
        }
      });
    });

    if([% is_double_targeted %]){
        var first_cols = [];
        var second_cols = [];
        $("#table_header_row th").each(function(index){
          var value = $(this).text();
          if(value.indexOf('First') === 0){
            console.log("Column " + value + " at index " + index + " is for First gene");
            first_cols.push(index);
          }
          else if(value.indexOf('Second') === 0){
            console.log("Column " + value + " at index " + index + " is for Second gene");
            second_cols.push(index);
          }
        });

        $.each(second_cols, function(index,col_index){
          $('table tr td:nth-child('+(col_index+1)+')').addClass('second_gene_report_col');
        });

        $.each(first_cols, function(index,col_index){
          $('table tr td:nth-child('+(col_index+1)+')').addClass('first_gene_report_col');
        });

    }
    // Add primer validation buttons and labels to Assembly plate
    [%IF extra_data.plate_type == 'ASSEMBLY' %]
      console.log('adding assembly plate functionality');

      // Change verification score to label
      var verification_col_index = getColumnIndexByName('QC Verified?') + 1;
      $('table tr td:nth-child(' + verification_col_index + ')').each(function(){
          var value = $(this).text();
          addQCVerifiedLabel($(this),value);
      });

      [% genotyping = { primer_class => 'genotyping_primers', id_column => 'Design ID', id_param => 'design_id', url => '/user/toggle_genotyping_primer_validation_state' } %]

      [% crispr = { primer_class => 'crispr_primers', id_column => 'Crispr ID', id_param => 'crispr_key', url => '/user/toggle_crispr_primer_validation_state' } %]

      [% FOREACH profile IN [genotyping,crispr] %]

        [% primer_class = profile.primer_class %]
        [% url = profile.url %]
        [% id_param = profile.id_param %]

        // extra_data:
        //   crispr_primers:         <- primer_class
        //     <crispr_id>:          <- id
        //       [<array of primers]
        //   genotyping_primers:     <- primer_class
        //     <design_id>:          <- id
        //       [<array of primers>]
        [% FOREACH id IN extra_data.$primer_class.keys %]
          [% FOREACH primer IN extra_data.$primer_class.$id %]
            var cell = getCell('[% primer.type %]','[% profile.id_column %]','[% id %]');

            // add the validation state toggle button, ajax reqest and callback
            addPrimerValidationState(
              cell,
              "[% c.uri_for(url) %]",
              '[% id_param %]',
              '[% id %]',
              '[% primer.type %]',
              [% IF primer.is_validated %]'1'[% ELSE %]''[% END %]
            );

          [% END %]
        [% END %]
      [% END %]
    [% END %]

  // Add plate name to the document title (name in browser tab)
    var title = '[% title %]';
    var plateNameRegex = /Plate (.*)/igm;

    if ( plateNameRegex.test(title) ) {
      title.match(plateNameRegex);
      document.title = plateNameRegex.exec(title)[1];
      $('input[name=plate_name]').val(document.title); 
    }
  });

</script>
