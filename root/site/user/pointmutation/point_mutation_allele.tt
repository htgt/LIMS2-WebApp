[%- META title = 'Point Mutation Alleles' %]
<script src="[% c.uri_for( '/static/jquery/js/d3.min.js' ) %]"></script>
<script src="[% c.uri_for( '/static/jquery/js/d3-tip.js' ) %]"></script>

<style>

.bars {
    overflow-x: scroll;
}

.bar {
  fill: steelblue;
}


.bar:hover {
  fill: orange;
}

.axis {
    font: 15px sans-serif;
    
    
}

.axisLabels {
    font: 18px sans-serif;
    font-weight: bold;
}


.axis path,
.axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
}

.tiptable { border-collapse: collapse; } /* remove cell spacing */
.tiptable td { padding: 0; }             /* remove cell padding */
.tiptable td:first-child { text-align: right; }
.tiptable b { font-weight: bold;}

.tooltip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
  font-size: 15px;
}

/* Creates a small triangle extender for the tooltip */
.tooltip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.tooltip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}


body { 
    padding-bottom: 65px; 
}


.lb-md {
    font-size: 22px;
}

.lb-colour {
    font-size: 22px;
    height: 0px;
}

.images {
    max-width: 60%;
    max-height: 60%;
}

.details {
    margin-left: 0 auto;
}

.baseA.baseSwitch {
    background-color: #63aa5a;
    color: white;
}

.baseC.baseSwitch {
    background-color: #e4ed6d;
    color: black;
}

.baseT.baseSwitch {
    background-color: #45719b;
    color: white;
}

.baseG.baseSwitch {
    background-color: #e88d1e;
    color: black;
}

 /* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

/* Hide default HTML checkbox */
.switch input {display:none;}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked + .slider {
    background-color: #2196F3;
}

input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}

</style>


<div class="page-header row">
    <div class="col-md-5">
        <h2>Mutation Alleles - [% miseq %]: [% oligo_index %]</h2>
    </div>    
    
    <div class="col-md-2 col-md-offset-1">
        <div id="keyContainer">
            <h5>Colour Key: </h5>
            <svg width="450" height="40">
                <g class="legend" transform="translate(0)">
                    <rect width="18" height="18" style="fill: #0a606d; stroke: #0a606d;"></rect>
                    <text x="22" y="14">Crispr Match</text>
                </g>
                <g class="legend" transform="translate(0,20)">
                    <rect width="18" height="18" style="fill: #e59e18; stroke: #e59e18;"></rect>
                    <text x="22" y="14">Possible Crispr Location</text>
                </g>
            </svg>
        </div>
    </div> 
    <div class="col-md-4">
        <div class="col-md-7">
            <label class="lb-colour">Highlight Crispr: </label>
        </div>
        <div class="col-md-4">
            <label class="switch">
                <input type="checkbox" id="styles" checked>
                <div class="slider round"></div>
            </label>    
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-3">
        [% SET prev = oligo_index - 1 %]
	[% IF prev <= 0 %]
	    <a href="[%- c.uri_for( '/user/point_mutation_allele',{miseq => miseq, oligoIndex => max_wells, exp => selection}) %]"><span><i class="glyphicon glyphicon-arrow-left"></i> Previous Well - [% max_wells %]</span></a>
        [% ELSE %]
	    <a href="[%- c.uri_for( '/user/point_mutation_allele',{miseq => miseq, oligoIndex => prev, exp => selection}) %]"><span class="text-left"><i class="glyphicon glyphicon-arrow-left"></i> Previous Well - [% prev %]</span></a>
        [% END %]
    </div>
        <div class="col-md-1">
            <label class="col-md">Experiment: </label>
        </div>
    <div class="col-md-5">
        <select class="form-control" align="center">
            <option value="All" onclick="showAll()">All</option>
            [% FOREACH exp IN experiments %]
            [% IF exp.id == selection %]
                <option class="ddExp" selected="selected" onclick="javascript:location.href='[%- c.uri_for( '/user/point_mutation_allele/',{miseq => miseq, oligoIndex => oligo_index, exp => exp.id}) %]'"  value="[% exp.id %]">[% exp.id %]</option>
            [% ELSE %]
                <option class="ddExp" onclick="javascript:location.href='[%- c.uri_for( '/user/point_mutation_allele/',{miseq => miseq, oligoIndex => oligo_index, exp => exp.id}) %]'"  value="[% exp.id %]">[% exp.id %]</option>
[% END %]
[% END %]
        </select>
    </div>
        <div class="col-md-3">
	[% SET next = oligo_index + 1 %]
	[% IF oligo_index >= max_wells %]
	    <a href="[%- c.uri_for( '/user/point_mutation_allele/',{miseq => miseq, oligoIndex => '1', exp => selection}) %]"><span class="col-md-offset-6 text-right">Next Well - 1 <i class="glyphicon glyphicon-arrow-right "></i></span></a>
	[% ELSE %]
	    <a href="[%- c.uri_for( '/user/point_mutation_allele/',{miseq=>miseq, oligoIndex => next, exp => selection}) %]"><span class="col-md-offset-6 text-right">Next Well - [% next %] <i class="glyphicon glyphicon-arrow-right"></i></span></a>
	[% END %]
        </div>
        &nbsp;
    </div>
</div>

<div class="well">
    <h3 class="col-md-12">Well Details</h3>

    <div class="row">
        <div class="col-md-6">
            <table class="details table table-striped">
                <tr>
                    <td>Project Name</td>
                    <td>[% miseq %]</td>
                    <td></td>
                <tr>
                    <td>Illumina Index</td>
                    <td>[% oligo_index %]</td>
                    <td></td>
                </tr>
<!--- Taken out until requested
                <tr>
                    <td>Barcode</td>
                    <td id="barcode"></td>
                    <td></td>
                </tr>
--->
            </table>
        </div>
    </div>
</div>
<form action="#" method="POST" id="formSubmit"></form>

[% IF selection %]
    <div class="row">
        <div class="col-md-4">
            <button class="btn btn-warning" onclick="showAll();">Show All Experiments <i class="glyphicon glyphicon-filter"></i></button>
        </div>
    </div>
[% END %]
<br>
[% IF experiments.size == 0  %]
    <p>No data found for well: [% oligo_index %].</p>
[% END %]

[% FOREACH experiment IN experiments %]
    [% IF !selection OR experiment.id == selection %]
        [% IF experiment.gene %]
            <h2>Experiment: [% experiment.id %], Gene: [% experiment.gene %]</h2>
        [% ELSE %]
            <h2>Experiment: [% experiment.id %]</h2>
        [% END %]
        <div id="clearfix[% experiment.id %]" class="clearfix row">
            <div class="col-md-2">
                <label class="lb-md">Classification: </label>
            </div>
            <div class="col-md-2">
                <form action="#" method="POST" name="class[% experiment.id %]" id="class[% experiment.id %]">
                    <select class="form-control" align="center" id="classSelect" name="class[% experiment.id %]" onchange="this.form.submit();">
                    [% FOR class IN classifications %]
                        [% IF class == experiment.class %]
                            <option value="[% class %]" selected="selected">[% class %]</option>
                        [% ELSE %]
                            <option value="[% class %]">[% class %]</option>
                        [% END %]
                    [% END %]
                    </select>
                </form>
            </div>
            <div class="col-md-2">
                <label class="lb-md">Status: </label>
            </div>
            <div class="col-md-2">
                <form action="#" method="POST" name="status[% experiment.id %]" id="status[% experiment.id %]">
                    <select class="form-control" align="center" id="statusSelect" name="status[% experiment.id %]" onchange="this.form.submit();">
                    [% FOR state IN status %]
                        [% IF state == experiment.status %]
                            <option value="[% state %]" selected="selected">[% state %]</option>
                        [% ELSE %]
                            <option value="[% state %]">[% state %]</option>
                        [% END %]
                    [% END %]
                    </select>
                </form>
            </div>
        </div>
        <div class='genes [% experiment.id %]'></div>
        <div class="bars" id="bars[% experiment.id %]"></div>
        
        
        <div class="row">
            <div class="col-md-3">
                <button class="allele btn btn-primary" onclick="displayIndels([% experiment.id %])" value="[% experiment.id %]">
                    Allele Frequency - [% experiment.id %]  <i class="glyphicon glyphicon-chevron-down"></i>
                </button>
            </div>
            <div class="col-md-3">
                <button id="dl[% experiment.id %]" class="download btn btn-success" value="[% experiment.id %]">
                    Download CSV <i class="glyphicon glyphicon-download-alt"></i>
                </button>
            </div>
        </div>
        <div id='[% experiment.id %]'></div>
        <br>
    [% END %]
[% END %]

[% INCLUDE 'user/pointmutation/miseq_alleles_frequency.tt' %]

<script type="text/javascript" charset="utf-8">
var exps = [];


$(document).ready(function() {
 $('.download').hide();
    $('#keyContainer').hide();
    $('.genes').each(function() {
        $($(this).attr('class').split(/\s+/)).each(function() {
            var exp = this.toString();
            if (exps.includes(exp) == false && exp != 'genes') {
                exps.push(exp);
            }
        });
    });
    console.log(exps);

for (var expIndex = 0; expIndex < exps.length; expIndex++) {
    var indels = '[% indel_stats %]';
    indels = jsonify(indels);
    var selection = exps[expIndex];
    JSON.stringify(selection);
    var data = indels[selection];

    buildImages(selection,data);
}
    
    var expSel = '[% selection %]';
    if (expSel) {
        document.title = '[% oligo_index %]:' + expSel + ' - [% miseq %]';
        displayIndels(document.getElementById(expSel));
        $('.allele').find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
    } else {
        document.title = '[% oligo_index %]:All - [% miseq %]';
    }
});




$('.allele').click(function() {
    $(this).find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
    var value = $(this).val();
    $('#dl' + value).toggle();
});

$('.download').click(function() {
    var value = $(this).val();
    getSummary(value,'1');
});

$('#styles').change(function() {
    $('span').toggleClass('baseSwitch');
    $('#keyContainer').toggle();
});

function jsonify(raw) {
    return JSON.parse(raw.replace(/&quot;/g,'"'));
}

function displayIndels(exp) {
    var expTable = document.getElementById("table" + exp.id);
    if (expTable == null) {
        getSummary(exp.id);
    }
    else {
        toggleTable("table" + exp.id);
    }
}

function toggleTable(table) {
    var expTable = document.getElementById(table);
    expTable.style.display = (expTable.style.display == "table") ? "none" : "table";
}

function mysortfunction(a,b) {
  a = a.replace(/"/g,'');
  b = b.replace(/"/g,'');

  return (a - b);
}

function buildImages(selection, data) {

    var percentage = 0;

    var margin = {top: 40, right: 20, bottom: 70, left: 90},
        width = window.innerWidth*0.56,
        height = window.innerHeight*0.6;
    

    var total_reads = 0;
    var max_ticks = width/21;
    var ticksArray= [];
    var min = data[1].indel;
    var max = data[data.length-2].indel;
    if (data.length <= max_ticks) {
        for (var i = 1; i < data.length-1; i++) {
            ticksArray.push(data[i].indel);
        }
    }
    else {
        ticksArray.push(min);
    
        var quart = Math.floor((data.length-1)/4);
        ticksArray.push(data[quart].indel);
    
        ticksArray.push(data[quart*2].indel);

        ticksArray.push("0");

        ticksArray.push(data[quart*3].indel);

        ticksArray.push(max);    

    }

    for (var i = 0; i < data.length; i++) {
        total_reads += data[i].frequency;
    }

    var x = d3.scaleBand()
        .rangeRound([0, width])
        .padding(0.1);

    var y = d3.scaleLinear()
        .range([height, 0]);

    var xAxis = d3.axisBottom()
        .scale(x)
        .ticks(ticksArray.length)
        .tickValues(ticksArray);
    
    var yAxis = d3.axisLeft()
        .scale(y)
        .ticks(10);

    var svg = d3.select("#bars" + selection)
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
         

    x.domain(data.map(function(d) { return d.indel; }));
    y.domain([0, d3.max(data, function(d) { return d.frequency; })]);
    
    svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
      .selectAll("text")

    svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
      .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end");

    var div = d3.select("body").append("div")	
        .attr("class", "tooltip")
        .style("opacity", 0);
    
    var tip = d3.tip()
        .attr('class', 'tooltip')
        .offset([-10, 0])
        .html(function(d) {
            return `
                <table class="tiptable">
                <tr><td>Indel Size<td><b>:</b>&nbsp` + d.indel + `
                <tr><td>#Reads<td><b>:</b>&nbsp` + d.frequency + ` 
                <tr><td>%Reads<td><b>:</b>&nbsp` + (d.frequency/total_reads*100).toFixed(2) + `%
                </table>`;
                })
    
    svg.call(tip);
    
    svg.selectAll("bar")
      .data(data)
      .enter()
      .append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.indel); })
      .attr("width", x.bandwidth())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); })
      .on("mouseover",  tip.show)
      .on("mouseout", tip.hide);


    svg.append("text")
      .attr("class", "axisLabels")
      .attr("transform",
            "translate(" + (width/2) + " ," + 
                           (height + margin.top + 20) + ")")
      .style("text-anchor", "middle")
      .text("Indel Size");


    svg.append("text")
      .attr("class", "axisLabels")
      .attr("transform", "rotate(-90)")
      .attr("y", 0 - margin.left)
      .attr("x",0 - (height / 2))
      .attr("dy", "1em")
      .style("text-anchor", "middle")
      .text("Frequency");      

    function type(d) {
        d.frequency = +d.frequency;
    return d;
    }
}


function getImages(letter, chart, div) {
    var index = '[% oligo_index %]';
    $.ajax({
        url: '[% c.uri_for('/api/point_mutation_img/') %]',
        type: "GET",
        contentType: 'image/png',
        data: {
            miseq: '[% miseq %]', 
            oligo: index,
            exp: letter,
            name: chart
        },
        success: function(result){
            if (div == null) {
                $('.' + letter).html('<img src="data:image/png;base64,' + result + '"/>');
            } else {
                $('#' + div).html('<img src="data:image/png;base64,' + result + '"/>');
            }
        },
        error: function() {
            console.log('Failure to retrieve indel size distribution graph for ' + letter);
            $('.' + letter).html('<p>Unable to retrieve graph for well ' + index + ' experiment ' + letter + '</p>');
            $('#clearfix' + letter).hide();
        }
    });
}

function getSummary(letter, downloadFlag) {
    var index = '[% oligo_index %]';
    var res; 
    if (downloadFlag == null) {
        //Preview for tables
        $.ajax({
            url: '[% c.uri_for('/api/point_mutation_summary/') %]',
            type: "GET",
            contentType: 'text/plain',
            data: {
                miseq: '[% miseq %]', 
                oligo: index,
                exp: letter,
                limit: 10,
            },
            success: function(result){
                createTable(letter, result);
            },
            error: function() {
                $('#' + letter).html('<p>Allele frequency summary for well ' + index + ' experiment ' + letter + ' was not found.</p>');
                $('#dl' + letter).hide();
            }
        });
    } else {
        //Full summary for downloading
        $.ajax({
            url: '[% c.uri_for('/api/point_mutation_summary/') %]',
            type: "GET",
            contentType: 'text/plain',
            data: {
                miseq: '[% miseq %]', 
                oligo: index,
                exp: letter,
            },
            success: function(result){
                console.log(result);
                downloadCSV(letter, result);
            },
            error: function() {
                console.log("Failed to retrieve data");
            }
        });
    }
    return res;
}

function getTargets(letter) {
    var index = '[% oligo_index %]';
    $.ajax({
        url: '[% c.uri_for('/api/point_mutation_target_region/') %]',
        type: "GET",
        contentType: 'text/plain',
        data: {
            miseq: '[% miseq %]', 
            oligo: index,
            exp: letter,
        },
        success: function(result){
            var res = JSON.parse(result);
        },
        error: function() {
            console.log("Found no targets for this experiment");
        }
    });
}

function createTable(exp, result) {
    result = JSON.parse(result);
    var rows = result.data.split("\n");
    
    var tableID = "table" + exp;
    $('#' + exp).append('<table id="' + tableID + '" class="table table-striped table-bordered"></table>');
    var table = document.getElementById("table" + exp);
    var header = table.createTHead();
    var headerRow = header.insertRow(0);
    var headers = rows.shift().split(",");

    for (var count = 0; count < headers.length; count++) {
        var headerCell = document.createElement("TH");
        headerCell.innerHTML = headers[count];
        headerRow.appendChild(headerCell);
    }

    var body = table.createTBody();

    for (var rowCount = 0; rowCount < rows.length; rowCount++) {
        if (rows[rowCount] == "") {
            continue;
        }
        var bodyRow = body.insertRow(-1);
        var rowData = rows[rowCount].split(",");
        for (var cellCount = 0; cellCount < rowData.length; cellCount++) {
            var bodyCell = bodyRow.insertCell(-1);
            if (cellCount == 0) {
                var highlight = highlightBases(rowData[cellCount], result.crispr, rowData[cellCount + 1]); 
                bodyCell.innerHTML = '<div class="seq' + exp + ' sequence" style="width: 400px;">' + highlight + '</div>';
            } else {
                if ($.isNumeric(rowData[cellCount])) {
                    rowData[cellCount] = Math.round(rowData[cellCount] * 100) / 100;
                }
                bodyCell.innerHTML = rowData[cellCount];
            }
        }

    }

    table.style.display = "table";
    $('.seq' + exp + ':last').css('overflow-x','scroll');
    $('.seq' + exp + ':last').scroll(function() {
        $('.seq' + exp).scrollLeft($(this).scrollLeft());
    });
    if ($('#styles').prop("checked") == true) {
        $('.seq' + exp).find('span').toggleClass('baseSwitch');
    }

    //Crispresso update added a column not required by the lab. Hiding it temporarily.
    // $('#' + tableID + ' td:nth-child(2), th:nth-child(2)').hide();
}

function showAll() {
    window.location.href = '[% c.uri_for('/user/point_mutation_allele/') %]' + encodeURI('?oligoIndex=[% oligo_index %]&miseq=[% miseq %]'); 
}

function overview() {
    window.location.href = '[% c.uri_for('/user/point_mutation/') %]' + encodeURI('?miseq=[% miseq %]'); 
}

function downloadCSV(letter, result) {
    result = JSON.parse(result);
    var hiddenElement = document.createElement('a');
    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(result.data);
    hiddenElement.download = 'MiSeq_[% oligo_index %]_exp' + letter + '.csv';
    document.body.appendChild(hiddenElement);
    hiddenElement.click();
}

</script>
